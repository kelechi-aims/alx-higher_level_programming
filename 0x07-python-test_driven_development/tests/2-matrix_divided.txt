The '''2-matrix_divided' module
============================

Using ''matrix_divided''
---------------------

Import function from the module:
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Numbers
=======

'Test with positive divisor'

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

'Test with negative divisor'

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

'Test with zero as divisor'

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
  ...
ZeroDivisionError: division by zero

'Test with float as divisor'

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 1.5)
[[0.67, 1.33, 2.0], [2.67, 3.33, 4.0]]

'Test with empty matrix'

>>> matrix_divided([[]], 1.5)
[[]]


'Testing with an empty list'

>>> matrix_divided([], 10)
Traceback (most recent call last):
  ...
IndexError: list index out of range

'Test with tuple as argument'

>>> matrix_divided((3, 7, 5), 2)
Traceback (most recent call last):
  ...
TypeError: matrix must be a matrix (list of lists) of integers/floats

'Test with matrix whose rows are not equal'

>>> matrix_divided([[1, 2], [3, 4, 5]], 1.5)
Traceback (most recent call last):
  ...
TypeError: Each row of the matrix must have the same size

'Test with divisor that is neither integer or float'

>>> matrix_divided([[1, 2, 6], [3, 4, 5]], "333")
Traceback (most recent call last):
          ... 
TypeError: div must be a number

'Test with matrix whose elements are integer or float with string'

>>> matrix_divided([["1", "2", 6], [3, 4, "5"]], 2)
Traceback (most recent call last):
  ...
TypeError: unsupported operand type(s) for /: 'str' and 'int'
